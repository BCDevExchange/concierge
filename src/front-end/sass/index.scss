// Global styles.

* {
  box-sizing: border-box;
}

body {
  width: 100%;
  overflow-x: hidden;
}

input:-ms-clear {
  display: none;
}

input[type="date"],
input[type="time"] {

  &::-ms-clear {
    display: none;
  }

  &::-webkit-clear-button,
  &::-webkit-inner-spin-button {
    -webkit-appearance: none;
    display: none;
  }
}

// Custom Bootstrap variable overrides.

$grid-breakpoints: (
  xs: 0,
  sm: 570px,
  md: 900px,
  lg: 1100px,
  xl: 1400px 
);

$container-max-widths: (
  sm: 530px,
  md: 860px,
  lg: 1060px,
  xl: 1060px // Maximum container width fixed at lg size.
);

$spacer: 1rem;

$spacers: (
	n6: ($spacer * -4),
	n7: ($spacer * -5),
	6: ($spacer * 4),
	7: ($spacer * 5)
);

$grid-gutter-width: $spacer * 2;

// Theme colors.
// Bootstrap updates the theme map based on these variables,
// so we don't need to update the map at all.
$primary: #0c99d6;
$info: #003366;
$warn: #FCBA19;
$danger: #DC3545;
$success: #28A745;

$theme-colors: (
  'info-alt': #38598A
);

$enable-validation-icons: false;

// Custom variables.

$fixed-bar-height: 71px;

// Import Bootstrap.

@import 'node_modules/bootstrap/scss/bootstrap.scss';

// Custom Bootstrap style overrides.

.btn,
button {

  &.disabled:not(.btn-link),
  &:disabled:not(.btn-link) {
    background-color: $secondary;
    border-color: $secondary;
  }
}

a {
  cursor: pointer;

  &.disabled {
    opacity: $btn-disabled-opacity;
    cursor: default;
  }
}

.blockquote {
  margin-left: $spacer;
  padding-left: $spacer;
  border-left: 2px solid $gray-200;
}

blockquote {
  @extend .blockquote;
}

table {
  @extend .table;

  thead {
    @extend .small;
    @extend .text-secondary;
    @extend .text-uppercase;
    @extend .font-weight-bold;
    @extend .bg-light;
  }
}

pre {
  @extend .bg-light;
  @extend .p-3;
  @extend .border;
  @extend .rounded;
}

label {
  @extend .font-size-small;
  @extend .py-1;

  .custom-checkbox & {
    @extend .font-size-base;
    @extend .py-0;
  }
}

nav.navbar .nav-link:hover {
  text-decoration: underline;
}

// Custom utilities.

.font-size-small {
  font-size: $font-size-sm;
}

.font-size-base {
  font-size: $font-size-base;
}

.font-size-large {
  font-size: $font-size-lg;
}

.text-decoration-underline {
  text-decoration: underline !important;
}

// Create classes for each of the text colors
// that apply the color when the element is being hovered.
// .text-hover-primary, .text-hover-danger, etc.
@each $color, $value in $theme-colors {
  .text-hover-#{$color} {
    @include hover {
      color: $value !important;
    }
  }
}

.text-wrap {
  white-space: normal !important;
}

.vertical-line {
  position: relative;

  &:after {
    content: ' ';
    position: absolute;
    top: 0;
    left: 50%;
    bottom: 0;
    border-right: $border-width solid $border-color;
  }
}

.fixed-bar {
  height: $fixed-bar-height;
}

.in-transition {

  .transition-hide {
    display: none;
  }
}

.border-bottom-gov {
  border-bottom: 2px solid $warn;
}

.border-top-gov {
  border-top: 2px solid $warn;
}

// Custom components

.markdown {
  
  img {
    max-width: 100%;
  }

  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {

    &:not(:first-child) {
      margin-top: 2*$spacer;
    }
  }

  blockquote,
  table,
  pre {
    margin-top: 2*$spacer;
    margin-bottom: 2*$spacer;
  }

}

// Custom page overrides.

.route-termsAndConditions {

  .markdown {

    & > ul {
      padding-left: 0;
    }

    ul {
      &,
      li {
        list-style-type: none; 
      }
    }
  }
}
